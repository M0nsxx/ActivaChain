const { ethers } = require("hardhat");

async function main() {
  console.log("üöÄ Creando servicios reales en el marketplace...");
  
  // Obtener la cuenta deployer
  const [deployer] = await ethers.getSigners();
  console.log("üìù Cuenta:", deployer.address);
  
  // Direcci√≥n del marketplace desplegado
  const MARKETPLACE_ADDRESS = "0x721aE67eC40BA624486CF9a2fE64309bB11536F3";
  
  // Conectar al contrato
  const ActivaMarketplace = await ethers.getContractFactory("ActivaMarketplace");
  const marketplace = ActivaMarketplace.attach(MARKETPLACE_ADDRESS);
  
  // Verificar servicios existentes
  const serviceCounter = await marketplace.serviceCounter();
  console.log("üìä Servicios existentes:", Number(serviceCounter));
  
  // Crear servicios reales
  const services = [
    {
      title: "Servicio de Prueba Sepolia",
      description: "Servicio de prueba con costo m√≠nimo para testing en Sepolia. Ideal para probar transacciones reales.",
      priceInUSDC: BigInt(1), // 0.000001 USDC
      category: 1,
      minReputation: 0
    },
    {
      title: "Desarrollo Smart Contract B√°sico",
      description: "Creaci√≥n de smart contracts simples para proyectos DeFi. Incluye testing y deployment.",
      priceInUSDC: BigInt(100 * 1e6), // $100 USDC
      category: 1,
      minReputation: 0
    },
    {
      title: "Auditor√≠a de Seguridad",
      description: "Revisi√≥n completa de seguridad para contratos inteligentes. An√°lisis de vulnerabilidades.",
      priceInUSDC: BigInt(500 * 1e6), // $500 USDC
      category: 1,
      minReputation: 0
    },
    {
      title: "UI/UX para DApps",
      description: "Dise√±o de interfaces modernas para aplicaciones descentralizadas con glassmorphism.",
      priceInUSDC: BigInt(200 * 1e6), // $200 USDC
      category: 2,
      minReputation: 0
    },
    {
      title: "Marketing Web3",
      description: "Estrategias de marketing digital para proyectos blockchain y DeFi.",
      priceInUSDC: BigInt(150 * 1e6), // $150 USDC
      category: 3,
      minReputation: 0
    },
    {
      title: "Consultor√≠a Blockchain",
      description: "Asesor√≠a t√©cnica para implementaci√≥n de soluciones blockchain empresariales.",
      priceInUSDC: BigInt(300 * 1e6), // $300 USDC
      category: 4,
      minReputation: 0
    }
  ];
  
  console.log("\nüéØ Creando servicios...");
  
  for (let i = 0; i < services.length; i++) {
    const service = services[i];
    try {
      console.log(`   ${i + 1}/${services.length}: ${service.title}`);
      const tx = await marketplace.createService(
        service.title,
        service.description,
        service.priceInUSDC,
        service.category,
        service.minReputation
      );
      await tx.wait();
      console.log(`   ‚úÖ Creado exitosamente`);
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}`);
    }
  }
  
  // Verificar servicios creados
  const finalServiceCounter = await marketplace.serviceCounter();
  console.log(`\nüìä Total de servicios en el contrato: ${finalServiceCounter}`);
  
  console.log("\nüéâ ¬°Servicios reales creados exitosamente!");
  console.log("üìç Marketplace:", MARKETPLACE_ADDRESS);
  console.log("üåê Ahora puedes comprar servicios reales en el frontend!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Error:", error);
    process.exit(1);
  });
