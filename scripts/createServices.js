const { ethers } = require("hardhat");
const fs = require("fs");
const path = require("path");

// Direcciones de contratos desplegados
const CONTRACTS = {
  usdc: "0x025434d9Cd4c77F7acC24f8DF90F07b425eFA953",
  activaNFT: "0x6fF6aD8216dD1454bC977Ebb72C83aD96C034E28",
  reputation: "0x138ad2d0d48070dffD6C6DaeaEbADc483CbeE29a",
  marketplace: "0x721aE67eC40BA624486CF9a2fE64309bB11536F3",
  activaToken: "0x031acF11ade235b00196A0605e8CF136a115F168"
};

// Servicios demo
const DEMO_SERVICES = [
  {
    title: "Desarrollo de Smart Contracts DeFi Avanzados",
    description: "Creaci√≥n de contratos inteligentes para protocolos DeFi incluyendo DEX, lending, yield farming y governance. Experiencia con Solidity 0.8.20+, OpenZeppelin, y auditor√≠as de seguridad.",
    priceInUSDC: 2500,
    category: 1,
    minReputation: 100
  },
  {
    title: "Desarrollo de DApps con Next.js y Web3",
    description: "Aplicaciones descentralizadas completas con frontend moderno, integraci√≥n Web3, y UX optimizada. Stack: Next.js 15, TypeScript, Wagmi, Tailwind CSS.",
    priceInUSDC: 1800,
    category: 1,
    minReputation: 100
  },
  {
    title: "Auditor√≠a de Smart Contracts",
    description: "Auditor√≠a completa de seguridad para contratos inteligentes. An√°lisis de vulnerabilidades, gas optimization, y reporte detallado con recomendaciones.",
    priceInUSDC: 3500,
    category: 1,
    minReputation: 100
  },
  {
    title: "Desarrollo de NFTs con Metadata Din√°mica",
    description: "Creaci√≥n de colecciones NFT con metadata din√°mica, traits raros, y funcionalidades avanzadas. Incluye marketplace personalizado y sistema de royalties.",
    priceInUSDC: 1200,
    category: 1,
    minReputation: 100
  },
  {
    title: "Desarrollo de Bridge Cross-Chain",
    description: "Implementaci√≥n de bridge para transferencias entre Ethereum, Arbitrum, y Polygon. Incluye validaci√≥n de transacciones y sistema de seguridad multicapa.",
    priceInUSDC: 5000,
    category: 1,
    minReputation: 100
  },
  {
    title: "Dise√±o de UI/UX para Aplicaciones Web3",
    description: "Dise√±o completo de interfaces para DApps con enfoque en usabilidad Web3. Incluye wireframes, prototipos interactivos, y gu√≠as de dise√±o.",
    priceInUSDC: 800,
    category: 2,
    minReputation: 50
  },
  {
    title: "Branding y Identidad Visual para Proyectos DeFi",
    description: "Desarrollo de identidad visual completa para proyectos DeFi. Logo, paleta de colores, tipograf√≠as, y aplicaciones en marketing digital.",
    priceInUSDC: 600,
    category: 2,
    minReputation: 50
  },
  {
    title: "Dise√±o de NFTs y Arte Digital",
    description: "Creaci√≥n de arte digital para colecciones NFT. Estilos √∫nicos, traits personalizados, y generaci√≥n de metadata. Especializaci√≥n en arte generativo.",
    priceInUSDC: 400,
    category: 2,
    minReputation: 50
  },
  {
    title: "Dise√±o de Landing Pages para ICOs",
    description: "Landing pages optimizadas para lanzamientos de tokens. Dise√±o responsive, animaciones, y integraci√≥n con wallets Web3.",
    priceInUSDC: 700,
    category: 2,
    minReputation: 50
  },
  {
    title: "Dise√±o de Interfaces para DAOs",
    description: "Dise√±o de interfaces para gobernanza descentralizada. Incluye dashboards de votaci√≥n, propuestas, y gesti√≥n de tesorer√≠a.",
    priceInUSDC: 1000,
    category: 2,
    minReputation: 50
  },
  {
    title: "Estrategia de Marketing DeFi Completa",
    description: "Estrategia integral de marketing para proyectos DeFi. Incluye community building, partnerships, influencer marketing, y campa√±as de lanzamiento.",
    priceInUSDC: 1500,
    category: 3,
    minReputation: 80
  },
  {
    title: "Community Management para Web3",
    description: "Gesti√≥n completa de comunidades Web3 en Discord, Telegram, y Twitter. Incluye moderaci√≥n, engagement, y estrategias de crecimiento.",
    priceInUSDC: 500,
    category: 3,
    minReputation: 40
  },
  {
    title: "Content Marketing para Blockchain",
    description: "Creaci√≥n de contenido educativo sobre blockchain y DeFi. Art√≠culos, videos, infograf√≠as, y estrategia de SEO para Web3.",
    priceInUSDC: 800,
    category: 3,
    minReputation: 60
  },
  {
    title: "Influencer Marketing en Web3",
    description: "Conexi√≥n con influencers del ecosistema crypto y DeFi. Estrategias de partnerships, campa√±as pagadas, y medici√≥n de ROI.",
    priceInUSDC: 1200,
    category: 3,
    minReputation: 80
  },
  {
    title: "Growth Hacking para DApps",
    description: "Estrategias de crecimiento para aplicaciones descentralizadas. Viral loops, referral programs, y optimizaci√≥n de conversi√≥n.",
    priceInUSDC: 1000,
    category: 3,
    minReputation: 60
  },
  {
    title: "Consultor√≠a Estrat√©gica Blockchain",
    description: "Asesoramiento estrat√©gico para implementaci√≥n de blockchain en empresas. An√°lisis de casos de uso, ROI, y roadmap de implementaci√≥n.",
    priceInUSDC: 2000,
    category: 4,
    minReputation: 100
  },
  {
    title: "Tokenomics y Econom√≠a de Tokens",
    description: "Dise√±o de tokenomics para proyectos Web3. Distribuci√≥n, vesting, utilidad, y modelos econ√≥micos sostenibles.",
    priceInUSDC: 1800,
    category: 4,
    minReputation: 100
  },
  {
    title: "Consultor√≠a Legal Web3",
    description: "Asesoramiento legal para proyectos blockchain. Compliance, regulaciones, y estructuraci√≥n legal para DAOs y tokens.",
    priceInUSDC: 3000,
    category: 4,
    minReputation: 100
  },
  {
    title: "Consultor√≠a de Seguridad Blockchain",
    description: "Auditor√≠a de seguridad y consultor√≠a para proyectos blockchain. An√°lisis de riesgos, mejores pr√°cticas, y implementaci√≥n de medidas de seguridad.",
    priceInUSDC: 2500,
    category: 4,
    minReputation: 100
  },
  {
    title: "Consultor√≠a de Gobernanza DAO",
    description: "Dise√±o e implementaci√≥n de sistemas de gobernanza para DAOs. Estructura de votaci√≥n, propuestas, y mecanismos de decisi√≥n.",
    priceInUSDC: 1500,
    category: 4,
    minReputation: 100
  }
];

async function main() {
  console.log("üöÄ Creando servicios demo en el marketplace...");

  const [deployer] = await ethers.getSigners();
  console.log("üìù Usando cuenta:", deployer.address);

  // Conectar a contratos
  const activaNFT = await ethers.getContractAt("ActivaNFT", CONTRACTS.activaNFT);
  const marketplace = await ethers.getContractAt("ActivaMarketplace", CONTRACTS.marketplace);

  // 1. Dar reputaci√≥n al deployer
  console.log("\n1Ô∏è‚É£ Dando reputaci√≥n al deployer...");
  try {
    await activaNFT.mintCertification(
      deployer.address,
      "Certificaci√≥n ActivaChain Developer",
      3, // Nivel avanzado
      500, // Reputaci√≥n alta
      "https://api.activachain.com/metadata/dev-cert"
    );
    console.log("‚úÖ Certificaci√≥n creada para el deployer");
  } catch (error) {
    console.log("‚ö†Ô∏è  Error creando certificaci√≥n:", error.message);
  }

  // 2. Crear servicios
  console.log("\n2Ô∏è‚É£ Creando servicios demo...");
  let servicesCreated = 0;
  
  for (let i = 0; i < DEMO_SERVICES.length; i++) {
    const service = DEMO_SERVICES[i];
    
    try {
      const tx = await marketplace.createService(
        service.title,
        service.description,
        ethers.parseUnits(service.priceInUSDC.toString(), 6),
        service.category,
        service.minReputation
      );
      await tx.wait();
      servicesCreated++;
      console.log(`   ‚úÖ Servicio ${i + 1}/20: ${service.title}`);
    } catch (error) {
      console.log(`   ‚ùå Error en servicio ${i + 1}: ${error.message}`);
    }
  }

  // 3. Verificar servicios creados
  console.log("\n3Ô∏è‚É£ Verificando servicios creados...");
  const serviceCounter = await marketplace.serviceCounter();
  console.log(`   üìä Total de servicios: ${serviceCounter}`);
  console.log(`   ‚úÖ Servicios creados en esta sesi√≥n: ${servicesCreated}`);

  // 4. Mostrar algunos servicios
  console.log("\n4Ô∏è‚É£ Mostrando servicios creados...");
  for (let i = 1; i <= Math.min(Number(serviceCounter), 5); i++) {
    const service = await marketplace.services(i);
    console.log(`   üìã Servicio ${i}: ${service.title}`);
    console.log(`      üí∞ Precio: $${Number(service.priceInUSDC) / 1e6} USDC`);
    console.log(`      üìÇ Categor√≠a: ${service.category}`);
    console.log(`      ‚≠ê Reputaci√≥n m√≠nima: ${service.minReputation}`);
  }

  // 5. Guardar informaci√≥n actualizada
  console.log("\n5Ô∏è‚É£ Guardando informaci√≥n actualizada...");
  const deploymentInfo = {
    network: (await ethers.provider.getNetwork()).name,
    chainId: Number((await ethers.provider.getNetwork()).chainId),
    deployer: deployer.address,
    contracts: CONTRACTS,
    services: {
      total: Number(serviceCounter),
      created: servicesCreated
    },
    timestamp: new Date().toISOString()
  };

  const deploymentPath = path.join(__dirname, "..", "deployment-info.json");
  fs.writeFileSync(deploymentPath, JSON.stringify(deploymentInfo, null, 2));
  console.log("‚úÖ Deployment info actualizada");

  // 6. Actualizar variables de entorno
  console.log("\n6Ô∏è‚É£ Actualizando variables de entorno...");
  const { updateEnvFile } = require("./updateEnv");
  updateEnvFile(deploymentInfo);

  console.log("\nüéâ SERVICIOS CREADOS EXITOSAMENTE!");
  console.log("=" * 50);
  console.log("üìã Resumen:");
  console.log(`   Servicios totales: ${serviceCounter}`);
  console.log(`   Servicios creados: ${servicesCreated}`);
  console.log(`   Proveedor: ${deployer.address}`);
  console.log("\nüåê Pr√≥ximos pasos:");
  console.log("   1. Iniciar frontend: cd frontend && npm run dev");
  console.log("   2. Visitar: http://localhost:3000/marketplace");
  console.log("   3. Conectar wallet y explorar servicios");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Error:", error);
    process.exit(1);
  });
